@media (min-width: 992px){
	.collapsible-container {
	 display: block;!important;
	 visibility:visible;
	 height: auto!important;
	 padding-bottom: 0;
	 overflow: visible!important;
	}
}

.collapsible-toggle {
	  padding: 5px 7px;
	  margin-top: 15px;
}

@media (min-width: 992px){
	.collapsible-toggle {
	  display: none;
	}
}

.collapse.width {
    height: auto;
}

.no-transition {
    -webkit-transition: none;
    transition: none;
}

.absolutetopright {
	position: absolute;
	right: 15px;
	z-index: 10;
}


/* Simple Collapsible */
.simple-collapsible-toggle {
	margin-top: 15px;
}

.simple-collapsible-icon {
	padding: 5px 7px;
}

/* Simple Collapsible Icon */
.simple-collapsible-toggle > .simple-collapsible-icon {
	font-family: "Glyphicons Halflings";
	display: inline-block;
}

.simple-collapsible-toggle > .simple-collapsible-icon:before {
	content: "\e113"; /* GlyphIcon chevron down */
}

.simple-collapsible-toggle.collapsed > .simple-collapsible-icon:before {
	content: "\e114"; /* GlyphIcon chevron up */
}

/* https://css-tricks.com/centering-in-the-unknown/ */
/* This parent can be any width and height */
.center-container {
  height: 100%;
  text-align: center;
}
 
/* The ghost, nudged to maintain perfect centering */
.center-container:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
  margin-right: -0.25em; /* Adjusts for spacing */
}

/* The element to be centered, can be of any width and height */ 
.center-container-content {
  display: inline-block;
  vertical-align: middle;
  text-align: initial; /* Reset text align to initial */
}

/* Inline Group Container */
 .inline-group-left {
 	float: left;
 	margin-right: 15px;
 }
 
 .inline-group-right {
 	float: right;
 	margin-left: 15px;
 }
 
 .inline-group-content {
 	overflow-x: hidden;
 }

/* Flex Layout */
.flexlayout {
	display: flex;
	flex-flow: column;
	height: 100%;
}

.flex-header {
}

.flex-content {
	flex: 2;
	overflow: auto;
}

.flex-footer {
}

.flexlayout > .flex-header > .row,
.flexlayout > .flex-content > .row,
.flexlayout > .flex-footer > .row {
	/* TODO can i do better than this ? */
	margin-right: 0px;
	margin-left: 0px;
}

/* TODO, this is a bad workaround can i set responsiveHeight to 100% in table component */
.flex-content > * > .tablewrapper {
	height: 100% !important;
}